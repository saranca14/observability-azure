apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-04T10:14:52Z"
    generateName: db-c5c47d694-
    labels:
      app: db
      pod-template-hash: c5c47d694
    name: db-c5c47d694-nh2wm
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: db-c5c47d694
      uid: 5055b634-9be1-4ffd-947a-93f4f627d3ec
    resourceVersion: "26833"
    uid: d652a142-a3f4-4ad7-98bd-a86b22b6ad90
  spec:
    containers:
    - env:
      - name: POSTGRES_USER
        value: postgres
      - name: POSTGRES_PASSWORD
        value: postgres
      image: amd64/postgres
      imagePullPolicy: Always
      name: postgres
      ports:
      - containerPort: 5432
        name: postgres
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/lib/postgresql/data
        name: db-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jwg9s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-default-42762816-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: db-data
    - name: kube-api-access-jwg9s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:06Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:14:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:14:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://34cb0034a78011d7c647b4da58cececbe53d872b76672fb0760da420a117c903
      image: docker.io/amd64/postgres:latest
      imageID: docker.io/amd64/postgres@sha256:2d61e96453bbee470aa9a417bb2ce091517d78210e9e483a4e1eb32fc444180f
      lastState: {}
      name: postgres
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-04T10:15:06Z"
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.224.0.10
    podIPs:
    - ip: 10.224.0.10
    qosClass: BestEffort
    startTime: "2025-03-04T10:14:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-04T10:14:52Z"
    generateName: jaeger-all-in-one-f7b5fd67d-
    labels:
      app: jaeger-all-in-one
      pod-template-hash: f7b5fd67d
    name: jaeger-all-in-one-f7b5fd67d-thm4b
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: jaeger-all-in-one-f7b5fd67d
      uid: 1d7585bc-1982-471f-a222-50de60ab2e86
    resourceVersion: "26828"
    uid: 2c2c5847-ac01-485b-a6a8-8765a3f55d7e
  spec:
    containers:
    - env:
      - name: COLLECTOR_ZIPKIN_HTTP_HTTP_PORT
        value: "9411"
      - name: STORAGE_TYPE
        value: memory
      image: jaegertracing/all-in-one:1.35
      imagePullPolicy: IfNotPresent
      name: jaeger
      ports:
      - containerPort: 5775
        protocol: TCP
      - containerPort: 5776
        protocol: TCP
      - containerPort: 5778
        protocol: TCP
      - containerPort: 14250
        protocol: TCP
      - containerPort: 14267
        protocol: TCP
      - containerPort: 14268
        protocol: TCP
      - containerPort: 6831
        protocol: TCP
      - containerPort: 6832
        protocol: TCP
      - containerPort: 16686
        protocol: TCP
      - containerPort: 9411
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rpsbq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-default-42762816-vmss000002
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-rpsbq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:06Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:14:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:06Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:06Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:14:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7b64b9d7b74f0524af8cba21e757dfb6e334daf71b2b2323a25c034e97beac9a
      image: docker.io/jaegertracing/all-in-one:1.35
      imageID: docker.io/jaegertracing/all-in-one@sha256:0e0c081fd0cf40e9028533d386177fc2492e4e839e1151237e847b2c9486715b
      lastState: {}
      name: jaeger
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-04T10:15:05Z"
    hostIP: 10.224.0.62
    hostIPs:
    - ip: 10.224.0.62
    phase: Running
    podIP: 10.224.0.64
    podIPs:
    - ip: 10.224.0.64
    qosClass: BestEffort
    startTime: "2025-03-04T10:14:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-04T10:19:34Z"
    generateName: otel-collector-6b44478fc-
    labels:
      app: otel-collector
      pod-template-hash: 6b44478fc
    name: otel-collector-6b44478fc-scx4g
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: otel-collector-6b44478fc
      uid: 208f8724-733b-436a-babe-1f7ff3901d10
    resourceVersion: "28076"
    uid: 3de4feb9-fe68-45c8-8dcf-f87a7a49e520
  spec:
    containers:
    - image: otel/opentelemetry-collector-contrib:latest
      imagePullPolicy: Always
      name: otel-collector
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/otelcol-contrib/
        name: config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rnk8s
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-default-42762816-vmss000002
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - configMap:
        defaultMode: 420
        name: otel-collector-config
      name: config-volume
    - name: kube-api-access-rnk8s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:19:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:19:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:19:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:19:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:19:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3b203164672682301bb233967f89bba83b652ef0e1d0ab6e557ee875055f7bd9
      image: docker.io/otel/opentelemetry-collector-contrib:latest
      imageID: docker.io/otel/opentelemetry-collector-contrib@sha256:85ac41c2db88d0df9bd6145e608a3cb023f5d8443868adbfbbf66efb51087917
      lastState: {}
      name: otel-collector
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-04T10:19:42Z"
    hostIP: 10.224.0.62
    hostIPs:
    - ip: 10.224.0.62
    phase: Running
    podIP: 10.224.0.70
    podIPs:
    - ip: 10.224.0.70
    qosClass: BestEffort
    startTime: "2025-03-04T10:19:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-04T10:14:52Z"
    generateName: redis-796dc594bb-
    labels:
      app: redis
      pod-template-hash: 796dc594bb
    name: redis-796dc594bb-v6tcq
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: redis-796dc594bb
      uid: 34d71cbe-b64a-4c39-9889-918811e3b88b
    resourceVersion: "26885"
    uid: d62f62f7-3ac7-4925-8d0f-4873095ce9bc
  spec:
    containers:
    - image: redis:alpine
      imagePullPolicy: IfNotPresent
      name: redis
      ports:
      - containerPort: 6379
        name: redis
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /data
        name: redis-data
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9nnfk
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-default-42762816-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - emptyDir: {}
      name: redis-data
    - name: kube-api-access-9nnfk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:14Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:14:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:14:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f6f24efa9e7b5863f0cd550a93a8971cdbde93e83d997183faf97dcf8cb1598a
      image: docker.io/library/redis:alpine
      imageID: docker.io/library/redis@sha256:02419de7eddf55aa5bcf49efb74e88fa8d931b4d77c07eff8a6b2144472b6952
      lastState: {}
      name: redis
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-04T10:15:13Z"
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.224.0.26
    podIPs:
    - ip: 10.224.0.26
    qosClass: BestEffort
    startTime: "2025-03-04T10:14:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-04T10:14:52Z"
    generateName: result-84bd97c96d-
    labels:
      app: result
      pod-template-hash: 84bd97c96d
    name: result-84bd97c96d-s2jg4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: result-84bd97c96d
      uid: e2bd7596-4e72-4b60-9ae7-0156209075d7
    resourceVersion: "26790"
    uid: c16502a1-aab6-4f98-99ff-c059b9573fc4
  spec:
    containers:
    - image: saranrnair/election-result:v2
      imagePullPolicy: IfNotPresent
      name: result
      ports:
      - containerPort: 80
        name: result
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-6glwj
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: dockerhub
    nodeName: aks-default-42762816-vmss000002
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-6glwj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:02Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:14:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:02Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:02Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:14:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b80293fb91edf252133f253b09462cb286552e0a7dde9c15cf60c684aa8f8de7
      image: docker.io/saranrnair/election-result:v2
      imageID: docker.io/saranrnair/election-result@sha256:7fac64da4b0a31e7741beb529c4cd2f3aab60d27af90bd0e3d3dda36a96f5519
      lastState: {}
      name: result
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-04T10:15:01Z"
    hostIP: 10.224.0.62
    hostIPs:
    - ip: 10.224.0.62
    phase: Running
    podIP: 10.224.0.67
    podIPs:
    - ip: 10.224.0.67
    qosClass: BestEffort
    startTime: "2025-03-04T10:14:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-04T10:14:52Z"
    generateName: vote-b5b69886d-
    labels:
      app: vote
      pod-template-hash: b5b69886d
    name: vote-b5b69886d-mb8gl
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: vote-b5b69886d
      uid: a5960018-2b55-4185-a5c7-640ac8260ecc
    resourceVersion: "26804"
    uid: 891bf309-e6d1-4705-8d79-13f806ade032
  spec:
    containers:
    - image: saranrnair/election-vote:stableV1
      imagePullPolicy: IfNotPresent
      name: vote
      ports:
      - containerPort: 80
        name: vote
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-grspm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: dockerhub
    nodeName: aks-default-42762816-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-grspm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:03Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:14:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:03Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:03Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:14:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9cdebd010c1a67a969d980aa3c767b7f47a923c6671bce7bcf5b3b2c3365d4be
      image: docker.io/saranrnair/election-vote:stableV1
      imageID: docker.io/saranrnair/election-vote@sha256:3544412e42f2d584a89198eb342e984c8e39e8c27b9cf066ee3588308df668b2
      lastState: {}
      name: vote
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-04T10:15:02Z"
    hostIP: 10.224.0.33
    hostIPs:
    - ip: 10.224.0.33
    phase: Running
    podIP: 10.224.0.43
    podIPs:
    - ip: 10.224.0.43
    qosClass: BestEffort
    startTime: "2025-03-04T10:14:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-04T10:14:52Z"
    generateName: worker-6445d74d4-
    labels:
      app: worker
      pod-template-hash: 6445d74d4
    name: worker-6445d74d4-994pl
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: worker-6445d74d4
      uid: 324ac94b-30ef-4e93-a4b9-0ba17db5ac3d
    resourceVersion: "26925"
    uid: 62466274-168d-48a6-9cff-70f0829ccb3a
  spec:
    containers:
    - image: saranrnair/election-worker:v16
      imagePullPolicy: IfNotPresent
      name: worker
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-zt6kx
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    imagePullSecrets:
    - name: dockerhub
    nodeName: aks-default-42762816-vmss000001
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-zt6kx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:21Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:14:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:14:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3eab8305cdd3d90780e910596b721b4b7102a1e0d59de136eae6ea1663a2be7f
      image: docker.io/saranrnair/election-worker:v16
      imageID: docker.io/saranrnair/election-worker@sha256:f010cd4601aae78275e8b6a0cbbf5e0e25fbb6650a3c2eca4f3349d35ea13183
      lastState: {}
      name: worker
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-04T10:15:21Z"
    hostIP: 10.224.0.4
    hostIPs:
    - ip: 10.224.0.4
    phase: Running
    podIP: 10.224.0.11
    podIPs:
    - ip: 10.224.0.11
    qosClass: BestEffort
    startTime: "2025-03-04T10:14:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-03-04T10:14:52Z"
    generateName: zipkin-74b8f5f6d-
    labels:
      app: zipkin
      pod-template-hash: 74b8f5f6d
    name: zipkin-74b8f5f6d-4g272
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: zipkin-74b8f5f6d
      uid: 7a47c9fe-16cf-48b0-9b4e-b7726aa32374
    resourceVersion: "26853"
    uid: 2dac7998-6fa2-4831-b7e5-0a7f3d4766a8
  spec:
    containers:
    - image: openzipkin/zipkin:2.23
      imagePullPolicy: IfNotPresent
      name: zipkin
      ports:
      - containerPort: 9411
        protocol: TCP
      resources: {}
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vf4td
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-default-42762816-vmss000000
    preemptionPolicy: PreemptLowerPriority
    priority: 0
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    volumes:
    - name: kube-api-access-vf4td
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:14:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:15:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-03-04T10:14:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://31655dd026c13a49c6e897f6e92491fd0fb0c20c3f0b20837a1861a3a47ec6ca
      image: docker.io/openzipkin/zipkin:2.23
      imageID: docker.io/openzipkin/zipkin@sha256:947ca34f00cef4a4732042dff489fd7c2e5a7867c70ade1b836b7d20aad9bf68
      lastState: {}
      name: zipkin
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-03-04T10:15:09Z"
    hostIP: 10.224.0.33
    hostIPs:
    - ip: 10.224.0.33
    phase: Running
    podIP: 10.224.0.38
    podIPs:
    - ip: 10.224.0.38
    qosClass: BestEffort
    startTime: "2025-03-04T10:14:52Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"db"},"name":"db","namespace":"default"},"spec":{"ports":[{"name":"db-service","port":5432,"targetPort":5432}],"selector":{"app":"db"},"type":"ClusterIP"}}
    creationTimestamp: "2025-03-04T10:14:52Z"
    labels:
      app: db
    name: db
    namespace: default
    resourceVersion: "26594"
    uid: 9aee1836-0ff7-4e55-bc08-7ef279cae33b
  spec:
    clusterIP: 10.0.234.224
    clusterIPs:
    - 10.0.234.224
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: db-service
      port: 5432
      protocol: TCP
      targetPort: 5432
    selector:
      app: db
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"jaeger-all-in-one","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":5775,"targetPort":5775},{"name":"compact","port":5776,"targetPort":5776},{"name":"thrift-http","port":5778,"targetPort":5778},{"name":"jaeger-collector","port":14250,"targetPort":14250},{"name":"jaeger-query","port":16686,"targetPort":16686},{"name":"jaeger-tracing","port":6831,"targetPort":6831},{"name":"jaeger-tracing-udp","port":6832,"targetPort":6832},{"name":"zipkin","port":9411,"targetPort":9411}],"selector":{"app":"jaeger-all-in-one"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-03-04T10:14:52Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    name: jaeger-all-in-one
    namespace: default
    resourceVersion: "26994"
    uid: b32998ba-4910-4e47-a5c4-a6912b0bfc5e
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.0.203.223
    clusterIPs:
    - 10.0.203.223
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      nodePort: 32370
      port: 5775
      protocol: TCP
      targetPort: 5775
    - name: compact
      nodePort: 30855
      port: 5776
      protocol: TCP
      targetPort: 5776
    - name: thrift-http
      nodePort: 32463
      port: 5778
      protocol: TCP
      targetPort: 5778
    - name: jaeger-collector
      nodePort: 31830
      port: 14250
      protocol: TCP
      targetPort: 14250
    - name: jaeger-query
      nodePort: 32662
      port: 16686
      protocol: TCP
      targetPort: 16686
    - name: jaeger-tracing
      nodePort: 32743
      port: 6831
      protocol: TCP
      targetPort: 6831
    - name: jaeger-tracing-udp
      nodePort: 31152
      port: 6832
      protocol: TCP
      targetPort: 6832
    - name: zipkin
      nodePort: 31483
      port: 9411
      protocol: TCP
      targetPort: 9411
    selector:
      app: jaeger-all-in-one
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 50.85.67.29
        ipMode: VIP
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-03-04T08:29:20Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "211"
    uid: e6433698-44c4-4ead-8673-e22763ecb1e6
  spec:
    clusterIP: 10.0.0.1
    clusterIPs:
    - 10.0.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"otel-collector","namespace":"default"},"spec":{"ports":[{"name":"grpc","port":4317,"targetPort":4317},{"name":"http","port":4318,"targetPort":4318}],"selector":{"app":"otel-collector"}}}
    creationTimestamp: "2025-03-04T10:14:52Z"
    name: otel-collector
    namespace: default
    resourceVersion: "26719"
    uid: 5139e629-83b8-498e-a543-5a0989994a71
  spec:
    clusterIP: 10.0.149.154
    clusterIPs:
    - 10.0.149.154
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc
      port: 4317
      protocol: TCP
      targetPort: 4317
    - name: http
      port: 4318
      protocol: TCP
      targetPort: 4318
    selector:
      app: otel-collector
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"redis"},"name":"redis","namespace":"default"},"spec":{"ports":[{"name":"redis-service","port":6379,"targetPort":6379}],"selector":{"app":"redis"},"type":"ClusterIP"}}
    creationTimestamp: "2025-03-04T10:14:52Z"
    labels:
      app: redis
    name: redis
    namespace: default
    resourceVersion: "26618"
    uid: b83a8ed5-2c56-49de-a9dc-a1e4137daee4
  spec:
    clusterIP: 10.0.161.131
    clusterIPs:
    - 10.0.161.131
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: redis-service
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      app: redis
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"result"},"name":"result","namespace":"default"},"spec":{"ports":[{"name":"result-service","port":8081,"targetPort":80}],"selector":{"app":"result"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-03-04T10:14:52Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: result
    name: result
    namespace: default
    resourceVersion: "26894"
    uid: 55c482bc-7d19-46b1-8bc2-db9407253124
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.0.165.173
    clusterIPs:
    - 10.0.165.173
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: result-service
      nodePort: 30712
      port: 8081
      protocol: TCP
      targetPort: 80
    selector:
      app: result
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 50.85.66.68
        ipMode: VIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"app":"vote"},"name":"vote","namespace":"default"},"spec":{"ports":[{"name":"vote-service","port":8080,"targetPort":80}],"selector":{"app":"vote"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-03-04T10:14:52Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: vote
    name: vote
    namespace: default
    resourceVersion: "26950"
    uid: 9c7fa0f8-7637-4393-aa17-d927fc2ad98e
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.0.83.38
    clusterIPs:
    - 10.0.83.38
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: vote-service
      nodePort: 31014
      port: 8080
      protocol: TCP
      targetPort: 80
    selector:
      app: vote
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 50.85.66.185
        ipMode: VIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"name":"zipkin","namespace":"default"},"spec":{"ports":[{"port":9411,"targetPort":9411}],"selector":{"app":"zipkin"},"type":"LoadBalancer"}}
    creationTimestamp: "2025-03-04T10:14:53Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    name: zipkin
    namespace: default
    resourceVersion: "27061"
    uid: ebe84dca-4412-43db-a708-142633d97c58
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.0.138.215
    clusterIPs:
    - 10.0.138.215
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 31252
      port: 9411
      protocol: TCP
      targetPort: 9411
    selector:
      app: zipkin
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 50.85.67.38
        ipMode: VIP
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"db"},"name":"db","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"db"}},"template":{"metadata":{"labels":{"app":"db"}},"spec":{"containers":[{"env":[{"name":"POSTGRES_USER","value":"postgres"},{"name":"POSTGRES_PASSWORD","value":"postgres"}],"image":"amd64/postgres","name":"postgres","ports":[{"containerPort":5432,"name":"postgres"}],"volumeMounts":[{"mountPath":"/var/lib/postgresql/data","name":"db-data"}]}],"volumes":[{"emptyDir":{},"name":"db-data"}]}}}}
    creationTimestamp: "2025-03-04T10:14:51Z"
    generation: 1
    labels:
      app: db
    name: db
    namespace: default
    resourceVersion: "26837"
    uid: c128cb84-694b-48d8-8fc1-cf5bdc60b9e0
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: db
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: db
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_PASSWORD
            value: postgres
          image: amd64/postgres
          imagePullPolicy: Always
          name: postgres
          ports:
          - containerPort: 5432
            name: postgres
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: db-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: db-data
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-04T10:15:06Z"
      lastUpdateTime: "2025-03-04T10:15:06Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-04T10:14:51Z"
      lastUpdateTime: "2025-03-04T10:15:06Z"
      message: ReplicaSet "db-c5c47d694" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"jaeger-all-in-one","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"jaeger-all-in-one"}},"template":{"metadata":{"labels":{"app":"jaeger-all-in-one"}},"spec":{"containers":[{"env":[{"name":"COLLECTOR_ZIPKIN_HTTP_HTTP_PORT","value":"9411"},{"name":"STORAGE_TYPE","value":"memory"}],"image":"jaegertracing/all-in-one:1.35","name":"jaeger","ports":[{"containerPort":5775},{"containerPort":5776},{"containerPort":5778},{"containerPort":14250},{"containerPort":14267},{"containerPort":14268},{"containerPort":6831},{"containerPort":6832},{"containerPort":16686},{"containerPort":9411}]}]}}}}
    creationTimestamp: "2025-03-04T10:14:52Z"
    generation: 1
    name: jaeger-all-in-one
    namespace: default
    resourceVersion: "26832"
    uid: 4fd0ba61-de6d-4768-bf64-b8bef0fb0a7e
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: jaeger-all-in-one
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: jaeger-all-in-one
      spec:
        containers:
        - env:
          - name: COLLECTOR_ZIPKIN_HTTP_HTTP_PORT
            value: "9411"
          - name: STORAGE_TYPE
            value: memory
          image: jaegertracing/all-in-one:1.35
          imagePullPolicy: IfNotPresent
          name: jaeger
          ports:
          - containerPort: 5775
            protocol: TCP
          - containerPort: 5776
            protocol: TCP
          - containerPort: 5778
            protocol: TCP
          - containerPort: 14250
            protocol: TCP
          - containerPort: 14267
            protocol: TCP
          - containerPort: 14268
            protocol: TCP
          - containerPort: 6831
            protocol: TCP
          - containerPort: 6832
            protocol: TCP
          - containerPort: 16686
            protocol: TCP
          - containerPort: 9411
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-04T10:15:06Z"
      lastUpdateTime: "2025-03-04T10:15:06Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-04T10:14:52Z"
      lastUpdateTime: "2025-03-04T10:15:06Z"
      message: ReplicaSet "jaeger-all-in-one-f7b5fd67d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"otel-collector","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"otel-collector"}},"template":{"metadata":{"labels":{"app":"otel-collector"}},"spec":{"containers":[{"image":"otel/opentelemetry-collector-contrib:latest","name":"otel-collector","volumeMounts":[{"mountPath":"/etc/otelcol-contrib/","name":"config-volume"}]}],"volumes":[{"configMap":{"name":"otel-collector-config"},"name":"config-volume"}]}}}}
    creationTimestamp: "2025-03-04T10:14:52Z"
    generation: 1
    name: otel-collector
    namespace: default
    resourceVersion: "28080"
    uid: 56ed8862-24a1-43f9-a236-202ef061b22f
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: otel-collector
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: otel-collector
      spec:
        containers:
        - image: otel/opentelemetry-collector-contrib:latest
          imagePullPolicy: Always
          name: otel-collector
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/otelcol-contrib/
            name: config-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: otel-collector-config
          name: config-volume
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-04T10:14:52Z"
      lastUpdateTime: "2025-03-04T10:15:32Z"
      message: ReplicaSet "otel-collector-6b44478fc" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-03-04T10:19:43Z"
      lastUpdateTime: "2025-03-04T10:19:43Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"redis"},"name":"redis","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"redis"}},"template":{"metadata":{"labels":{"app":"redis"}},"spec":{"containers":[{"image":"redis:alpine","name":"redis","ports":[{"containerPort":6379,"name":"redis"}],"volumeMounts":[{"mountPath":"/data","name":"redis-data"}]}],"volumes":[{"emptyDir":{},"name":"redis-data"}]}}}}
    creationTimestamp: "2025-03-04T10:14:52Z"
    generation: 1
    labels:
      app: redis
    name: redis
    namespace: default
    resourceVersion: "26889"
    uid: e3a1ea65-cd73-4ffe-84f2-cb5e27f249e0
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: redis
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-04T10:15:14Z"
      lastUpdateTime: "2025-03-04T10:15:14Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-04T10:14:52Z"
      lastUpdateTime: "2025-03-04T10:15:14Z"
      message: ReplicaSet "redis-796dc594bb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"result"},"name":"result","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"result"}},"template":{"metadata":{"labels":{"app":"result"}},"spec":{"containers":[{"image":"saranrnair/election-result:v2","name":"result","ports":[{"containerPort":80,"name":"result"}]}],"imagePullSecrets":[{"name":"dockerhub"}]}}}}
    creationTimestamp: "2025-03-04T10:14:52Z"
    generation: 1
    labels:
      app: result
    name: result
    namespace: default
    resourceVersion: "26795"
    uid: ccc78d88-8e43-4486-af17-5b38c3ab8a22
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: result
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: result
      spec:
        containers:
        - image: saranrnair/election-result:v2
          imagePullPolicy: IfNotPresent
          name: result
          ports:
          - containerPort: 80
            name: result
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: dockerhub
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-04T10:15:02Z"
      lastUpdateTime: "2025-03-04T10:15:02Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-04T10:14:52Z"
      lastUpdateTime: "2025-03-04T10:15:02Z"
      message: ReplicaSet "result-84bd97c96d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"vote"},"name":"vote","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"vote"}},"template":{"metadata":{"labels":{"app":"vote"}},"spec":{"containers":[{"image":"saranrnair/election-vote:stableV1","name":"vote","ports":[{"containerPort":80,"name":"vote"}]}],"imagePullSecrets":[{"name":"dockerhub"}]}}}}
    creationTimestamp: "2025-03-04T10:14:52Z"
    generation: 1
    labels:
      app: vote
    name: vote
    namespace: default
    resourceVersion: "26808"
    uid: 1164a837-0683-4a71-afc2-e3ad89c550ff
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: vote
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: vote
      spec:
        containers:
        - image: saranrnair/election-vote:stableV1
          imagePullPolicy: IfNotPresent
          name: vote
          ports:
          - containerPort: 80
            name: vote
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: dockerhub
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-04T10:15:03Z"
      lastUpdateTime: "2025-03-04T10:15:03Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-04T10:14:52Z"
      lastUpdateTime: "2025-03-04T10:15:03Z"
      message: ReplicaSet "vote-b5b69886d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"app":"worker"},"name":"worker","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"worker"}},"template":{"metadata":{"labels":{"app":"worker"}},"spec":{"containers":[{"image":"saranrnair/election-worker:v16","name":"worker"}],"imagePullSecrets":[{"name":"dockerhub"}]}}}}
    creationTimestamp: "2025-03-04T10:14:52Z"
    generation: 1
    labels:
      app: worker
    name: worker
    namespace: default
    resourceVersion: "26927"
    uid: 0f0ff7e7-3892-4ff3-b081-560b384eebcb
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: worker
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: worker
      spec:
        containers:
        - image: saranrnair/election-worker:v16
          imagePullPolicy: IfNotPresent
          name: worker
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: dockerhub
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-04T10:15:22Z"
      lastUpdateTime: "2025-03-04T10:15:22Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-04T10:14:52Z"
      lastUpdateTime: "2025-03-04T10:15:22Z"
      message: ReplicaSet "worker-6445d74d4" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"name":"zipkin","namespace":"default"},"spec":{"replicas":1,"selector":{"matchLabels":{"app":"zipkin"}},"template":{"metadata":{"labels":{"app":"zipkin"}},"spec":{"containers":[{"image":"openzipkin/zipkin:2.23","name":"zipkin","ports":[{"containerPort":9411}]}]}}}}
    creationTimestamp: "2025-03-04T10:14:52Z"
    generation: 1
    name: zipkin
    namespace: default
    resourceVersion: "26858"
    uid: bae288de-cbb4-486b-bb3e-c78fadf18c35
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: zipkin
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: zipkin
      spec:
        containers:
        - image: openzipkin/zipkin:2.23
          imagePullPolicy: IfNotPresent
          name: zipkin
          ports:
          - containerPort: 9411
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-04T10:15:09Z"
      lastUpdateTime: "2025-03-04T10:15:09Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-04T10:14:52Z"
      lastUpdateTime: "2025-03-04T10:15:09Z"
      message: ReplicaSet "zipkin-74b8f5f6d" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-04T10:14:51Z"
    generation: 1
    labels:
      app: db
      pod-template-hash: c5c47d694
    name: db-c5c47d694
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: db
      uid: c128cb84-694b-48d8-8fc1-cf5bdc60b9e0
    resourceVersion: "26836"
    uid: 5055b634-9be1-4ffd-947a-93f4f627d3ec
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: db
        pod-template-hash: c5c47d694
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: db
          pod-template-hash: c5c47d694
      spec:
        containers:
        - env:
          - name: POSTGRES_USER
            value: postgres
          - name: POSTGRES_PASSWORD
            value: postgres
          image: amd64/postgres
          imagePullPolicy: Always
          name: postgres
          ports:
          - containerPort: 5432
            name: postgres
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: db-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: db-data
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-04T10:14:52Z"
    generation: 1
    labels:
      app: jaeger-all-in-one
      pod-template-hash: f7b5fd67d
    name: jaeger-all-in-one-f7b5fd67d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: jaeger-all-in-one
      uid: 4fd0ba61-de6d-4768-bf64-b8bef0fb0a7e
    resourceVersion: "26831"
    uid: 1d7585bc-1982-471f-a222-50de60ab2e86
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: jaeger-all-in-one
        pod-template-hash: f7b5fd67d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: jaeger-all-in-one
          pod-template-hash: f7b5fd67d
      spec:
        containers:
        - env:
          - name: COLLECTOR_ZIPKIN_HTTP_HTTP_PORT
            value: "9411"
          - name: STORAGE_TYPE
            value: memory
          image: jaegertracing/all-in-one:1.35
          imagePullPolicy: IfNotPresent
          name: jaeger
          ports:
          - containerPort: 5775
            protocol: TCP
          - containerPort: 5776
            protocol: TCP
          - containerPort: 5778
            protocol: TCP
          - containerPort: 14250
            protocol: TCP
          - containerPort: 14267
            protocol: TCP
          - containerPort: 14268
            protocol: TCP
          - containerPort: 6831
            protocol: TCP
          - containerPort: 6832
            protocol: TCP
          - containerPort: 16686
            protocol: TCP
          - containerPort: 9411
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-04T10:14:52Z"
    generation: 1
    labels:
      app: otel-collector
      pod-template-hash: 6b44478fc
    name: otel-collector-6b44478fc
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: otel-collector
      uid: 56ed8862-24a1-43f9-a236-202ef061b22f
    resourceVersion: "28079"
    uid: 208f8724-733b-436a-babe-1f7ff3901d10
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: otel-collector
        pod-template-hash: 6b44478fc
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: otel-collector
          pod-template-hash: 6b44478fc
      spec:
        containers:
        - image: otel/opentelemetry-collector-contrib:latest
          imagePullPolicy: Always
          name: otel-collector
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/otelcol-contrib/
            name: config-volume
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            name: otel-collector-config
          name: config-volume
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-04T10:14:52Z"
    generation: 1
    labels:
      app: redis
      pod-template-hash: 796dc594bb
    name: redis-796dc594bb
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: redis
      uid: e3a1ea65-cd73-4ffe-84f2-cb5e27f249e0
    resourceVersion: "26888"
    uid: 34d71cbe-b64a-4c39-9889-918811e3b88b
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: redis
        pod-template-hash: 796dc594bb
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: redis
          pod-template-hash: 796dc594bb
      spec:
        containers:
        - image: redis:alpine
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
          - containerPort: 6379
            name: redis
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /data
            name: redis-data
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        volumes:
        - emptyDir: {}
          name: redis-data
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-04T10:14:52Z"
    generation: 1
    labels:
      app: result
      pod-template-hash: 84bd97c96d
    name: result-84bd97c96d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: result
      uid: ccc78d88-8e43-4486-af17-5b38c3ab8a22
    resourceVersion: "26794"
    uid: e2bd7596-4e72-4b60-9ae7-0156209075d7
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: result
        pod-template-hash: 84bd97c96d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: result
          pod-template-hash: 84bd97c96d
      spec:
        containers:
        - image: saranrnair/election-result:v2
          imagePullPolicy: IfNotPresent
          name: result
          ports:
          - containerPort: 80
            name: result
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: dockerhub
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-04T10:14:52Z"
    generation: 1
    labels:
      app: vote
      pod-template-hash: b5b69886d
    name: vote-b5b69886d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: vote
      uid: 1164a837-0683-4a71-afc2-e3ad89c550ff
    resourceVersion: "26807"
    uid: a5960018-2b55-4185-a5c7-640ac8260ecc
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: vote
        pod-template-hash: b5b69886d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: vote
          pod-template-hash: b5b69886d
      spec:
        containers:
        - image: saranrnair/election-vote:stableV1
          imagePullPolicy: IfNotPresent
          name: vote
          ports:
          - containerPort: 80
            name: vote
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: dockerhub
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-04T10:14:52Z"
    generation: 1
    labels:
      app: worker
      pod-template-hash: 6445d74d4
    name: worker-6445d74d4
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: worker
      uid: 0f0ff7e7-3892-4ff3-b081-560b384eebcb
    resourceVersion: "26926"
    uid: 324ac94b-30ef-4e93-a4b9-0ba17db5ac3d
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: worker
        pod-template-hash: 6445d74d4
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: worker
          pod-template-hash: 6445d74d4
      spec:
        containers:
        - image: saranrnair/election-worker:v16
          imagePullPolicy: IfNotPresent
          name: worker
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: dockerhub
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-04T10:14:52Z"
    generation: 1
    labels:
      app: zipkin
      pod-template-hash: 74b8f5f6d
    name: zipkin-74b8f5f6d
    namespace: default
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: zipkin
      uid: bae288de-cbb4-486b-bb3e-c78fadf18c35
    resourceVersion: "26856"
    uid: 7a47c9fe-16cf-48b0-9b4e-b7726aa32374
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: zipkin
        pod-template-hash: 74b8f5f6d
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: zipkin
          pod-template-hash: 74b8f5f6d
      spec:
        containers:
        - image: openzipkin/zipkin:2.23
          imagePullPolicy: IfNotPresent
          name: zipkin
          ports:
          - containerPort: 9411
            protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
kind: List
metadata:
  resourceVersion: ""

apiVersion: v1
kind: ConfigMap
metadata:
  name: mimir-config
  namespace: obs
data:
  mimir.yaml: |
    target: all  # Run all components in a single process

    multitenancy_enabled: false

    # No separate 'metrics' block needed for auth_enabled anymore
    querier:
      timeout: 30s
    server:
      http_listen_port: 9009
      grpc_listen_port: 9095
      log_level: info
      http_server_read_timeout: 30s # Good practice
      http_server_write_timeout: 30s # Good practice
      http_server_idle_timeout: 120s # Good practice

    # No top-level query_range.  It's now under distributor.

    distributor:
      ring:
        kvstore:
          store: inmemory

    ingester:
      ring:
        kvstore:
          store: inmemory
        replication_factor: 1
        final_sleep: 0s

    blocks_storage:
      backend: filesystem
      filesystem:
        dir: /var/mimir/blocks
      tsdb:
        dir: /var/mimir/tsdb

    ruler_storage:
      backend: filesystem
      filesystem:
        dir: /var/mimir/ruler
      # No separate alertmanager_client or enable_alertmanager_v2 needed.

    alertmanager_storage:
      backend: filesystem
      filesystem:
        dir: /var/mimir/alertmanager

    compactor:
      data_dir: /var/mimir/compactor
      sharding_ring:
        kvstore:
          store: inmemory

    ruler:
      enable_api: true
      # No alertmanager_url or separate client config needed.

    query_scheduler:
      ring:
        kvstore:
          store: inmemory

    store_gateway:
      sharding_ring:
        replication_factor: 1

    limits:
      ingestion_rate: 1000000
      ingestion_burst_size: 2000000
      max_global_series_per_user: 5000000
      max_global_series_per_metric: 100000

    memberlist:  # Still need memberlist, even for inmemory
      join_members:
      - mimir.obs.svc.cluster.local:7946